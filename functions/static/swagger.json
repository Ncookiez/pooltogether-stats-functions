{
  "swagger": "2.0",
  "info": {
    "description": "This API is the easiest way to query previously queried on-chain data from PoolTogether V4.",
    "version": "1.0.0",
    "title": "PoolTogether Stats API"
  },
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "General Usage",
      "description": "Query user activity through basic V4 functionality."
    },
    {
      "name": "Delegations",
      "description": "Query delegation activity."
    },
    {
      "name": "Other",
      "description": "Query other interesting on-chain stats."
    }
  ],
  "paths": {
    "/{chain}/deposits": {
      "get": {
        "tags": [
          "General Usage"
        ],
        "summary": "Gets a list of all deposits on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of data to return.",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in each page.",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/Deposits"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/withdrawals": {
      "get": {
        "tags": [
          "General Usage"
        ],
        "summary": "Gets a list of all withdrawals on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of data to return. (Default `0`)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in each page. (Default `1000`)",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/Withdrawals"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/claims": {
      "get": {
        "tags": [
          "General Usage"
        ],
        "summary": "Gets a list of all claims on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of data to return. (Default `0`)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in each page. (Default `1000`)",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/Claims"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/balances": {
      "get": {
        "tags": [
          "General Usage"
        ],
        "summary": "Gets a list of all user balances on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of data to return. (Default `0`)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in each page. (Default `1000`)",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/Balances"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/yield": {
      "get": {
        "tags": [
          "Other"
        ],
        "summary": "Gets a list of all yield captures on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of data to return. (Default `0`)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in each page. (Default `1000`)",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/Yield"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/supply": {
      "get": {
        "tags": [
          "Other"
        ],
        "summary": "Gets a history of aave tokens and ticket supply on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of data to return. (Default `0`)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in each page. (Default `1000`)",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/Supply"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/delegationsCreated": {
      "get": {
        "tags": [
          "Delegations"
        ],
        "summary": "Gets a list of all delegations created on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of data to return. (Default `0`)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in each page. (Default `1000`)",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/DelegationsCreated"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/delegationsFunded": {
      "get": {
        "tags": [
          "Delegations"
        ],
        "summary": "Gets a list of all delegations funded on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of data to return. (Default `0`)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in each page. (Default `1000`)",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/DelegationsFunded"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/delegationsUpdated": {
      "get": {
        "tags": [
          "Delegations"
        ],
        "summary": "Gets a list of all delegations updated on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of data to return. (Default `0`)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in each page. (Default `1000`)",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/DelegationsUpdated"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/delegationsWithdrawn": {
      "get": {
        "tags": [
          "Delegations"
        ],
        "summary": "Gets a list of all delegations withdrawn on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page of data to return. (Default `0`)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of results in each page. (Default `1000`)",
            "required": false,
            "type": "integer",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/DelegationsWithdrawn"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/stats": {
      "get": {
        "tags": [
          "Other"
        ],
        "summary": "Gets many pre-calculated stats of any particular chain, useful for quick charting.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/Stats"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/lastDeposits": {
      "get": {
        "tags": [
          "Other"
        ],
        "summary": "Gets the 1000 most recent deposits on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/LastDeposits"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/{chain}/lastDelegations": {
      "get": {
        "tags": [
          "Other"
        ],
        "summary": "Gets the 1000 most recent delegations funded on a specific chain.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "chain",
            "in": "path",
            "description": "Blockchain to query data from.",
            "required": true,
            "type": "string",
            "enum": [
              "eth",
              "poly",
              "avax",
              "op"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/LastDelegationsFunded"
            }
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    },
    "/wallet": {
      "get": {
        "tags": [
          "Other"
        ],
        "summary": "Gets many stats of any particular wallet.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "Wallet address to query for.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query.",
            "schema": {
              "$ref": "#/definitions/PlayerData"
            }
          },
          "400": {
            "description": "Invalid query."
          },
          "500": {
            "description": "Internal API error."
          }
        }
      }
    }
  },
  "definitions": {
    "Deposits": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "wallet": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "LastDeposits": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "wallet": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "Withdrawals": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "wallet": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "Claims": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "wallet": {
                "type": "string"
              },
              "prizes": {
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "Balances": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "timestamp": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "wallet": {
                "type": "string"
              },
              "balance": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "Yield": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "Supply": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "aave": {
                "type": "number"
              },
              "tickets": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "DelegationsCreated": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "delegator": {
                "type": "string"
              },
              "delegatee": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "DelegationsFunded": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "delegator": {
                "type": "string"
              },
              "amount": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "LastDelegationsFunded": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "delegator": {
                "type": "string"
              },
              "amount": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "DelegationsUpdated": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "delegator": {
                "type": "string"
              },
              "newDelegatee": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "DelegationsWithdrawn": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "page": {
          "type": "integer"
        },
        "hasNextPage": {
          "type": "boolean"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "txHash": {
                "type": "string"
              },
              "block": {
                "type": "integer"
              },
              "timestamp": {
                "type": "number"
              },
              "delegator": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              }
            }
          }
        }
      }
    },
    "Stats": {
      "type": "object",
      "properties": {
        "lastQueriedBlock": {
          "type": "integer"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "minTimestamp": {
                "type": "integer"
              },
              "maxTimestamp": {
                "type": "integer"
              },
              "exampleData": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "PlayerData": {
      "type": "object",
      "properties": {
        "txs": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "timestamps": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "depositsOverTime": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "claimsOverTime": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "withdrawalsOverTime": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "balancesOverTime": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "balances": {
          "type": "object",
          "properties": {
            "eth": {
              "type": "integer"
            },
            "poly": {
              "type": "integer"
            },
            "avax": {
              "type": "integer"
            },
            "op": {
              "type": "integer"
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "GitHub Repository",
    "url": "https://github.com/Ncookiez/pooltogether-stats-functions"
  }
}